import type { Prompt } from '../../../../types/Prompt';
import type { CommonExecutionToolsOptions } from '../../../CommonExecutionToolsOptions';
import type { AvailableModel } from '../../../LlmExecutionTools';
import type { LlmExecutionTools } from '../../../LlmExecutionTools';
import type { PromptChatResult } from '../../../PromptResult';
import type { PromptCompletionResult } from '../../../PromptResult';
/**
 * Mocked execution Tools for just faking expected responses for testing purposes
 */
export declare class MockedFackedLlmExecutionTools implements LlmExecutionTools {
    private readonly options;
    constructor(options: CommonExecutionToolsOptions);
    /**
     * Fakes chat model
     */
    gptChat(prompt: Pick<Prompt, 'content' | 'modelRequirements' | 'expectations' | 'postprocessing'>): Promise<PromptChatResult & PromptCompletionResult>;
    /**
     * Fakes completion model
     */
    gptComplete(prompt: Pick<Prompt, 'content' | 'modelRequirements' | 'expectations' | 'postprocessing'>): Promise<PromptCompletionResult>;
    /**
     * List all available fake-models that can be used
     */
    listModels(): Array<AvailableModel>;
}
